//
//  MainFormatter.swift
//  OMDB
//
//  Created by Emircan Aydın on 5.11.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class MainFormatter {
    private var data: SearchResponse?
    private var responseList: [SearchModel] = [SearchModel]()
    var paginationInfo: PaginationInfo = PaginationInfo()
}

// MARK: - Extensions -

extension MainFormatter: MainFormatterInterface {
    
    func getNumberOfSection() -> Int {
        return 0
    }
    
    func getNumberOfItem(in section: Int) -> Int {
        let count = responseList.count
        return (paginationInfo.limit <= paginationInfo.resultCount) ? count + 1 : count
    }
    
    func getCount() -> Int {
        return responseList.count
    }
    
    func setData(with response: SearchResponse) {
        
        if response.error == nil {
            paginationInfo.resultCount = response.search?.count ?? 0
        } else {
            paginationInfo.resultCount = 0
        }
        
        data = response
        
        guard let resultList = response.search else {
            return
        }
        
        responseList.append(contentsOf: resultList)
    }
    
    func getItem(at index: Int) -> GenericDataProtocol? {
        let item = responseList[index]
        return MovieCardData(posterData: CustomImageViewComponentData(imageUrl: item.poster), title: item.title)
    }
    
    func getItemId(at index: Int) -> String {
        return responseList[index].imdbID
    }
    
    func getSearchControllerData(with listener: @escaping TextChangeBlock) -> SearchControllerData {
        return SearchControllerData().setTextChangeListener(by: listener)
    }
    
    func getPage() -> Int {
        return paginationInfo.page
    }
    
    func clearData() {
        paginationInfo.resultCount = 0
        paginationInfo.page = 1
        responseList.removeAll()
    }
}
